{"version":3,"sources":["getWeb3.js","theme.js","components/TermsDialog.js","components/Box.js","components/Snackbar.js","App.js","serviceWorker.js","index.js"],"names":["getWeb3","accountsHandler","networkHandler","Promise","resolve","reject","window","addEventListener","a","ethereum","autoRefreshOnNetworkChange","on","networkId","accounts","web3","Web3","enable","provider","providers","HttpProvider","console","log","theme","createMuiTheme","typography","button","fontSize","Transition","React","forwardRef","props","ref","Slide","direction","AlertDialogSlide","useState","open","setOpen","accepted","handleChange","handleClose","Grid","item","xs","Button","color","onClick","Checkbox","onChange","checked","name","Dialog","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Box","styled","div","spacing","palette","Alert","elevation","variant","SwapSnackbar","severity","snackbarOpen","message","snackbarClosed","Snackbar","cosmos","require","BigNumber","prefix","process","REACT_APP_BECH32_PREFIX","config","DECIMAL_PLACES","StyledButton","primary","main","App","event","target","value","state","errors","tokenBalance","newValue","termsAccepted","setState","length","isNaN","swapAmount","includes","substring","index","indexOf","parseFloat","utils","toBN","toGrains","gt","recipientAddress","startsWith","address","getBytes32","error","formValid","canSubmit","handleSubmit","preventDefault","validateForm","initiateSwap","setErrorMessage","valid","Object","values","forEach","val","deployedNetwork","EngSwapContract","networks","contractAddress","instance","eth","Contract","abi","tokenAddress","methods","token","call","then","result","tokenInstance","tokenContract","contract","etherscanUrl","transactionHash","componentDidMount","initWeb3","loading","getAccounts","net","getId","web3Error","enableWeb3","location","reload","balanceOf","maxSwap","fromGrains","setInfoMessage","infoMessage","setSuccessMessage","amount","multipliedBy","toString","dividedBy","resetForm","self","allowance","swapAmountGrains","lt","approve","send","from","gas","once","confirmationNumber","receipt","status","handleError","burnFunds","fromAscii","txError","maxSwapAmount","hasEng","this","Container","component","maxWidth","CssBaseline","className","Typography","style","marginTop","marginBottom","fontFamily","sm","md","p","noValidate","container","align","width","e","focus","FormControlLabel","control","TextField","required","disabled","label","autoFocus","labelPlacement","Tooltip","title","aria-label","IconButton","CircularProgress","size","href","src","height","alt","Component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dc1ac829.chunk.js","sourcesContent":["import Web3 from \"web3\";\n\nconst getWeb3 = (accountsHandler, networkHandler) =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        window.ethereum.autoRefreshOnNetworkChange = false;\n        \n        window.ethereum.on(\"networkChanged\", function(networkId) {\n          networkHandler(networkId);\n        });\n        window.ethereum.on(\"accountsChanged\", function(accounts) {\n          accountsHandler(accounts);\n        });\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Accounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:8545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;\n","import { createMuiTheme} from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  typography: {\n    button: {\n      fontSize: '2.5rem',\n    },\n  },\n});\n\nexport default theme","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function AlertDialogSlide(props) {\n  const [open, setOpen] = React.useState(false);\n  const accepted = props.accepted;\n  const handleChange = props.handleChange;\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Grid item xs={12}>\n        <Button color=\"primary\" onClick={handleClickOpen}>\n          Accept Terms of Use\n        </Button>\n        <Checkbox\n              onChange={handleChange}\n              checked={accepted}\n              name=\"termsAccepted\"\n              color=\"primary\"\n            />\n\n      </Grid>\n      <Dialog\n        open={open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">{\"Agree to the terms and conditions?\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            THE TOKEN SWAP IS PROVIDED BY CONTRIBUTORS “AS IS” AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF RELIABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n            IN NO EVENT SHALL THE CONTRIBUTORS TO SECRET SWAP OR MAINTAINERS OF SECRETSWAP.IO BE LIABLE TO ANY PARTY FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES\n            INCLUDING LOST PROFITS, ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, THOSE WHO SWAP OR USE SECRETSWAP.IO ARE ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n          </DialogContentText>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Close\n            </Button>\n          </DialogActions>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n","import styled from 'styled-components';\nimport { spacing, palette } from '@material-ui/system';\n\nconst Box = styled.div`${spacing}${palette}`;\n\nexport default Box;","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function SwapSnackbar(props) {\n  const severity = props.severity;\n  const snackbarOpen = props.snackbarOpen;\n  const message = props.message;\n\n  const handleClose = props.snackbarClosed;\n\n  return (\n    <div>\n      <Snackbar open={snackbarOpen || false} \n        onClose={handleClose}\n      >\n        <Alert onClose={handleClose} severity={severity}>\n          {message}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n}","import React, { Component } from \"react\";\nimport EngSwapContract from \"./contracts/EngSwap.json\";\nimport tokenContract from \"./contracts/ERC20.json\";\nimport getWeb3 from \"./getWeb3\";\nimport \"./App.css\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport { IconButton } from '@material-ui/core';\nimport Typography from \"@material-ui/core/Typography\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport styled, { ThemeProvider } from \"styled-components\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport theme from \"./theme\";\nimport TermsDialog from \"./components/TermsDialog\"\nimport Box from \"./components/Box\";\nimport Snackbar from \"./components/Snackbar\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst cosmos = require(\"cosmos-lib\");\nconst Web3 = require(\"web3\");\nconst BigNumber = require('bignumber.js');\nconst prefix = process.env.REACT_APP_BECH32_PREFIX || 'secret';\nconst tokenDecimals = 8;\nBigNumber.config({ DECIMAL_PLACES: tokenDecimals })\nconst ETHERSCAN_MAINNET = 'http://etherscan.io/tx/';\nconst ETHERSCAN_RINKEBY = 'http://rinkeby.etherscan.io/tx/';\n\nconst StyledButton = styled(Button)`\n  color: ${props => props.theme.palette.primary.main};\n`;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      formValid: false,\n      snackbarOpen: false,\n      accepted: false,\n      tokenBalance: null,\n      swapAmount: null,\n      recipientAddress: null,\n      web3: null,\n      web3Error: null,\n      networkId: null,\n      accounts: null,\n      contract: null,\n      contractAddress: null,\n      tokenContract: null,\n      errors: {\n        swapAmount: \"\",\n        recipientAddress: \"\",\n        termsAccepted: \"\"\n      },\n      receipt: null,\n      infoMessage: null,\n      transactionHash: null,\n      etherscanUrl: ETHERSCAN_RINKEBY\n    };\n  }\n\n  handleChange = event => {\n    const { name, value, checked } = event.target;\n    const { errors, tokenBalance } = this.state;\n    let newValue = value;\n    \n    switch (name) {\n      case \"termsAccepted\":\n        if (!checked) {\n          errors.termsAccepted = \"You must agree to the terms and conditions\";\n        } else {\n          errors.termsAccepted = \"\";\n        }\n\n        this.setState({ accepted: checked });\n        break;\n\n      case \"swapAmount\":\n\n        if(newValue.length === 0 || isNaN(newValue)) {\n            errors.swapAmount = \"Invalid swap amount\"\n        } else {\n          //trim extra decimal places\n          if (value.includes(\".\") && value.substring(\".\").length > tokenDecimals) {\n            const index = value.indexOf(\".\")\n            newValue = value.substring(0, index) + value.substring(index, index + tokenDecimals + 1)\n          }\n\n          if (parseFloat(newValue) < 1) {\n            errors.swapAmount = \"Minimum 1 ENG\"\n          } else if (Web3.utils.toBN(this.toGrains(newValue)).gt(Web3.utils.toBN(tokenBalance))) {\n              errors.swapAmount = \"Insufficient balance\"\n          } else {\n            errors.swapAmount = \"\";\n          }\n        }\n        break;\n\n      case \"recipientAddress\":\n        errors.recipientAddress = \"\";\n        if (!value || !value.startsWith(prefix)) {\n          errors.recipientAddress = `Invalid prefix, expected ${prefix}`;\n        }\n        try {\n          cosmos.address.getBytes32(value, prefix);\n          this.setState({\n            recipientAddress: value\n          });\n        } catch (error) {\n          errors.recipientAddress = error.message;\n        }\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({ errors, [name]: newValue });\n    this.setState({formValid: this.canSubmit()})\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    if (this.validateForm(this.state.errors)) {\n      this.initiateSwap();\n    } else {\n      this.setErrorMessage(this.state.errors);\n    }\n  };\n\n  validateForm = errors => {\n    let valid = true;\n    Object.values(errors).forEach(val => val.length > 0 && (valid = false));\n    return valid;\n  };\n\n  networkHandler = async (networkId) => {\n    const {web3} = this.state;\n    if (!web3) {\n      return;\n    }\n\n    const deployedNetwork = EngSwapContract.networks[networkId];\n\n    // Confirm we have a contract configured\n    if (!deployedNetwork) {\n      this.setErrorMessage(\"Network is unsupported\");\n      return;\n    } else {\n      this.setErrorMessage(\"\");\n    }\n\n    let contractAddress = deployedNetwork.address;\n    const instance = new web3.eth.Contract(\n      EngSwapContract.abi,\n      deployedNetwork && contractAddress\n    );\n\n    let tokenAddress = null;\n\n    await instance.methods\n      .token()\n      .call()\n      .then(result => {\n        console.log(`Swapping with ENG contract at address: ${result}`);\n        tokenAddress = result;\n      });\n      const tokenInstance = new web3.eth.Contract(\n        tokenContract.abi,\n        deployedNetwork && tokenAddress\n      );\n      \n      this.setState({\n        contract: instance,\n        contractAddress: contractAddress,\n        tokenContract: tokenInstance,\n        networkId: networkId,\n        etherscanUrl: networkId === 1 ? ETHERSCAN_MAINNET : ETHERSCAN_RINKEBY\n      },\n      this.tokenBalance\n    );\n  }\n\n  etherscanUrl = () => {\n    const {etherscanUrl, transactionHash} = this.state;\n    return etherscanUrl + transactionHash;\n  }\n\n  accountsHandler = accounts => {\n    if (accounts && accounts.length > 0) {\n      this.setState({\n        accounts: accounts,\n        errors: {\n          swapAmount: \"\",\n          recipientAddress: \"\",\n          termsAccepted: \"\"\n        }\n      })\n      this.tokenBalance();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initWeb3();\n  };\n\n  initWeb3 = async () => {\n\n    try {\n      this.setState({loading: true});\n      \n      // Get network provider and web3 instance.\n      const web3 = await getWeb3(this.accountsHandler, this.networkHandler);\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      this.setState({\n        web3: web3,\n        accounts: accounts,\n      });\n\n      this.networkHandler(networkId);\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      this.setErrorMessage(\n        `Failed to load web3, accounts, or contract. Check console for details.`\n      );\n      this.setState({web3Error: error});\n      console.error(error);\n    } finally {\n      this.setState({loading: false});\n    }\n  }\n  \n  enableWeb3 = async () => {\n    this.initWeb3();\n    window.location.reload();\n  }\n\n  tokenBalance = async () => {\n    this.setState({loading: true});\n    const { accounts, tokenContract } = this.state;\n\n    if (accounts && accounts.length > 0 && tokenContract) {\n      await tokenContract.methods\n        .balanceOf(accounts[0])\n        .call()\n        .then(result => {\n          this.setState({\n            tokenBalance: result,\n            maxSwap: this.fromGrains(result)\n          });\n        });\n    }\n    this.setState({loading: false});\n  };\n\n  setInfoMessage = message => {\n    if (message) {\n      this.setState({ snackbarOpen: true, infoMessage: message, severity: \"info\"});\n    }\n  };\n\n  setSuccessMessage = message => {\n    this.setState({ snackbarOpen: true, infoMessage: message, severity: \"success\"});\n  }\n\n  setErrorMessage = message => {\n    if (message) {\n      this.setState({ snackbarOpen: true, infoMessage: message, severity: \"error\"});\n    } else {\n      this.setState({ snackbarOpen: false});\n    }\n  };\n\n  snackbarClosed = () => {\n    this.setState({ snackbarOpen: false});\n  }\n\n  toGrains = amount => {\n    return new BigNumber(amount).multipliedBy(10 ** tokenDecimals).toString()\n  }\n\n  fromGrains = amount => {\n    return new BigNumber(amount).dividedBy(10 ** tokenDecimals).toString()\n  }\n\n  resetForm = () => {\n    this.setState({\n      formValid: false,\n      accepted: false,\n      swapAmount: null,\n      recipientAddress: null,\n    });\n  }\n\n  initiateSwap = async () => {\n    const {\n      accounts,\n      swapAmount,\n      contract,\n      tokenContract,\n      contractAddress\n    } = this.state;\n\n    const self = this;\n\n    const allowance = await tokenContract.methods\n      .allowance(accounts[0], contractAddress)\n      .call();\n\n    this.setState({loading: true});\n\n    const swapAmountGrains = this.toGrains(swapAmount)\n    self.setInfoMessage(\"Open Metamask and sign the 'Approve' transaction\");\n\n    // Check if current allowance is sufficient, else approve\n    if (Web3.utils.toBN(allowance).lt(Web3.utils.toBN(swapAmountGrains))) {\n      await tokenContract.methods\n        .approve(contractAddress, swapAmountGrains)\n        .send({\n          from: accounts[0],\n          gas: 50000\n        })\n        .once(\"transactionHash\", function(transactionHash) {\n          self.setInfoMessage(\"Broadcasting 'Approve ENG transfer'\");\n        })\n        .once(\"confirmation\", function(confirmationNumber, receipt) {\n          if (receipt.status === true) {\n            self.setInfoMessage(\"Approved. Sign the 'Burn' transaction\");\n          } else {\n            self.setErrorMessage(\"Failed to approve ENG burn\");\n          }\n        })\n        .on(\"error\", function(error) {\n          self.handleError(error);\n        });\n    }\n\n    await contract.methods\n      .burnFunds(\n        Web3.utils.fromAscii(self.state.recipientAddress),\n        swapAmountGrains\n      )\n      .send({\n        from: accounts[0],\n        gas: 100000\n      })\n      .once(\"transactionHash\", function(transactionHash) {\n        self.setInfoMessage(\"Broadcasting 'Burn' transaction\");\n      })\n      .on(\"error\", function(error) {\n        self.handleError(error);\n      }).then(function(receipt) {\n        self.setState({ transactionHash: receipt.transactionHash });\n        if (receipt.status === true) {\n          self.setSuccessMessage(\"ENG Burn confirmed\");\n          self.tokenBalance();\n        } else {\n          self.setErrorMessage(\"ENG Burn failed\");\n        }\n        self.setState({loading: false});\n      });\n  };\n\n  handleError = (txError) => {\n    console.error(`Contract error: ${txError.message}`);\n    if (txError.message && txError.message.includes(\"User denied transaction signature\")) {\n      this.setErrorMessage(\"Failed to sign the transaction\");\n    } else if (\"insufficient funds\"){\n      this.setErrorMessage(\"Deposit ETH for gas\");\n    } else {\n      this.setErrorMessage(\"Swap failed. Check console logs.\");\n    }\n    this.setState({loading: false});\n  }\n\n  canSubmit = () => {\n    const result = !this.state.loading &&\n      this.state.accepted &&\n      this.state.swapAmount > 0 &&\n      this.state.recipientAddress &&\n      this.validateForm(this.state.errors)\n    return result;\n  };\n\n  maxSwapAmount = () => {\n    if (this.hasEng()) {\n      this.setState({swapAmount: this.fromGrains(this.state.tokenBalance)});\n    }\n  }\n\n  hasEng = () => {\n    const { tokenBalance } = this.state;\n    return tokenBalance && parseFloat(tokenBalance) > 0\n  }\n\n  render() {\n    const { errors, loading } = this.state;\n\n    if (!this.state.web3) {\n      if (this.state.web3Error) {\n        return <div className=\"App\">\n          <Typography className=\"h1\" component=\"h1\" variant=\"h4\" style={{ marginTop: 50, marginBottom: 10 }}>\n            You're not connected to Metamask!\n          </Typography>\n          \n          {loading && (\n            <CircularProgress\n              size={15}\n            />\n          )}\n          <Button\n            onClick={this.enableWeb3}\n            disabled={loading}\n          >\n            <img src=\"metamask-fox.svg\" width=\"100\" height=\"100\" alt=\"Retry Metamask\"/>\n            Connect Metamask\n          </Button>\n          \n          <Snackbar \n            snackbarOpen={this.state.snackbarOpen} \n            snackbarClosed={this.snackbarClosed}\n            severity={this.state.severity} \n            message={this.state.infoMessage}\n            />\n          </div>;\n      } else {\n        return <div className=\"App\">\n          <Typography className=\"h1\" component=\"h1\" variant=\"h4\" style={{ marginTop: 50, marginBottom: 10 }}>\n            Connecting to Metamask...\n            <CircularProgress\n                size={20}\n              />\n          </Typography>\n          \n          <Snackbar \n            snackbarOpen={this.state.snackbarOpen} \n            snackbarClosed={this.snackbarClosed}\n            severity={this.state.severity} \n            message={this.state.infoMessage}\n            />\n          </div>;\n      }\n    }\n\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <ThemeProvider theme={theme}>\n          <div className=\"App\">\n            <Typography className=\"h1\" component=\"h1\" variant=\"h4\" style={{ marginTop: 50 }}>\n              Burn ENG for SCRT!\n            </Typography>\n            <Typography className=\"span\" component=\"span\" variant=\"span\" style={{ marginBottom: 10, fontSize: 10 }}>\n              Disclaimer: site is currently alpha. Updates will be made over time.\n            </Typography>\n            <Box\n              fontFamily=\"h6.fontFamily\"\n              fontSize={{ xs: 'h6.fontSize', sm: 'h4.fontSize', md: 'h3.fontSize' }}\n              p={{ xs: 2, sm: 3, md: 4 }}\n            >\n\n              <form noValidate>\n              <Grid container spacing={2}>\n                <Typography className=\"h3\" component='h3' variant=\"h6\" align=\"center\" style={{ marginBottom: 10, fontSize: 18, width:\"100%\"}}>\n                  Create a SCRT Adddress With:\n                </Typography>\n                <StyledButton color=\"primary\"\n                  style={{ fontSize: 12, width:\"33%\"}}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    let win = window.open('https://secretnodes.org/#/tutorials/ledger-nano-s?id=use-your-ledger-with-the-secret-network', '_blank');\n                    win.focus();\n                  }}\n                >\n                  Ledger\n                </StyledButton>\n                <StyledButton color=\"primary\"\n                  style={{ fontSize: 12, width:\"33%\"}}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    let win = window.open('https://secretnodes.org/#/tutorials/light-client-mainnet', '_blank');\n                    win.focus();\n                  }}\n                >\n                  Light Client\n                </StyledButton>\n                <StyledButton color=\"primary\"\n                  style={{ fontSize: 12, width:\"33%\"}}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    let win = window.open('https://mathwallet.org/en-us/', '_blank');\n                    win.focus();\n                  }}\n                >\n                  Mathwallet*\n                </StyledButton>\n                <Typography className=\"span\" component=\"span\" style={{fontSize: 8, width: \"100%\"}} align='center'>\n                *Mathwallet support goes live June 29th 2020\n                </Typography>\n                <Grid item xs={12}>\n                  <FormControlLabel\n                    control={\n                      <TextField\n                        required\n                        name=\"swapAmount\"\n                        id=\"swapAmount\"\n                        disabled={!this.hasEng()}\n                        label=\"ENG amount\"\n                        value={this.state.swapAmount || \"\"}\n                        autoFocus\n                        onChange={this.handleChange}\n                      />\n                    }\n                    label={this.state.maxSwap}\n                    labelPlacement=\"bottom\"\n                  />\n                  \n                  <Tooltip title=\"Swap full ENG balance\" aria-label=\"Swap full ENG balance\">\n                    <IconButton\n                        onClick={this.maxSwapAmount}\n                        >\n                        <ArrowUpwardIcon/>\n                      </IconButton>\n                  </Tooltip>\n                </Grid>\n\n                {errors.swapAmount.length > 0 && (\n                  <Grid item xs={12}>\n                    <Typography style={{ color: \"red\", marginTop: 0 }}>\n                        {errors.swapAmount}\n                    </Typography>\n                  </Grid>\n                )}\n\n                <Grid item xs={12}>\n                  <FormControlLabel\n                    control={\n                      <TextField\n                        required\n                        name=\"recipientAddress\"\n                        value={this.state.recipientAddress || \"\"}\n                        label=\"SCRT address\"\n                        onChange={this.handleChange}\n                        disabled={!this.hasEng()}\n                      />\n                    }\n                    label=\" SCRT\"\n                    labelPlacement=\"bottom\"\n                  />\n                  <Tooltip title=\"Secret recipient\" aria-label=\"Secret recipient\">\n                    <IconButton>\n                        <HelpOutlineIcon fontSize=\"small\"/>\n                    </IconButton>\n                  </Tooltip>\n                </Grid>\n\n                {errors.recipientAddress.length > 0 && (\n                  <Grid item xs={12}>\n                    <Typography style={{ color: \"red\", marginTop: 0 }}>\n                      {errors.recipientAddress}\n                    </Typography>\n                  </Grid>\n                )}\n                <Grid item xs={12}>\n                  <TermsDialog \n                    handleChange={this.handleChange} \n                    accepted={this.state.accepted}>\n                  </TermsDialog>\n                </Grid>\n                <Grid item xs={12}>\n\n                <div>\n                  {loading && (\n                    <CircularProgress\n                      size={15}\n                    />\n                  )}\n                  <StyledButton color=\"primary\"\n                    onClick={this.handleSubmit}\n                    disabled={!this.canSubmit()}\n                  >\n                    Start Swap\n                  </StyledButton>\n                  <StyledButton color=\"primary\"\n                  style={{ marginTop: 20, fontSize: 12, width: \"100%\"}}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    window.location.href='https://secretnodes.org';\n                  }}\n                >\n                  FAQ\n                </StyledButton>\n                  </div>\n                </Grid>\n              </Grid>\n            </form>\n            </Box>\n            <Snackbar \n              snackbarOpen={this.state.snackbarOpen} \n              snackbarClosed={this.snackbarClosed}\n              severity={this.state.severity} \n              message={this.state.infoMessage}\n              />\n          </div>\n        </ThemeProvider>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}